{"version":3,"file":"index.js","sources":["../src/ticker/Ticker.ts","../src/iterators/AbstractIterator.ts","../src/iterators/IteratorBuilder.ts","../src/iterators/ObjectIterator.ts","../src/abstract/BaseCollection.ts","../src/abstract/KeyedCollection.ts","../src/abstract/CacheCollection.ts","../src/abstract/SortedMap.ts","../src/linked-map/LinkedMap.ts","../src/lru-map/LRUMap.ts","../src/keyed-cache/KeyedCache.ts","../src/hash-cache/HashCache.ts"],"sourcesContent":["export interface Ticker {\n  now(): number;\n}\n\nexport class SystemTicker implements Ticker {\n  public now(): number {\n    return Date.now();\n  }\n}\n","export abstract class AbstractIterator<T> implements IterableIterator<T> {\n  public abstract next(): IteratorResult<T>;\n\n  public [Symbol.iterator](): IterableIterator<T> {\n    return this;\n  }\n}\n","import { AbstractIterator } from \"./AbstractIterator\";\n\nexport type MapIteratorMapper<S, D> = (value: S) => D;\n\nclass MapIterator<S, D> extends AbstractIterator<D> {\n  constructor(\n    private source: AbstractIterator<S>,\n    private mapper: MapIteratorMapper<S, D>\n  ) {\n    super();\n  }\n\n  public next(): IteratorResult<D> {\n    const result = this.source.next();\n\n    return result.done\n      ? { done: result.done } as IteratorResult<D>\n      : { done: false, value: this.mapper(result.value) };\n  }\n}\n\nexport type FilterIteratorPredicate<S> = (value: S) => boolean;\n\nclass FilterIterator<S> extends AbstractIterator<S> {\n  constructor(\n    private source: AbstractIterator<S>,\n    private predicate: FilterIteratorPredicate<S>\n  ) {\n    super();\n  }\n\n  public next(): IteratorResult<S> {\n    for (const value of this.source) {\n      if (this.predicate(value)) {\n        return { done: false, value };\n      }\n    }\n\n    return { done: true } as IteratorResult<S>;\n  }\n}\n\nexport class IteratorBuilder<S> {\n  constructor(private source: AbstractIterator<S>) {}\n\n  public map<D>(mapper: MapIteratorMapper<S, D>): IteratorBuilder<D> {\n    return new IteratorBuilder<D>(new MapIterator(this.source, mapper));\n  }\n\n  public filter(predicate: FilterIteratorPredicate<S>): IteratorBuilder<S> {\n    return new IteratorBuilder(new FilterIterator(this.source, predicate));\n  }\n\n  public build(): IterableIterator<S> {\n    return this.source;\n  }\n}\n","import { AbstractIterator } from \"./AbstractIterator\";\nimport { IteratorBuilder } from \"./IteratorBuilder\";\n\nexport class ObjectIterator<V> extends AbstractIterator<[string, V]> {\n  private iterator: IterableIterator<[string, V]>;\n\n  constructor(private source: { [key: string]: V }) {\n    super();\n  }\n\n  public next(): IteratorResult<[string, V]> {\n    if (!this.iterator) {\n      const keys = Object.keys(this.source);\n\n      this.iterator = new IteratorBuilder(keys.entries())\n        .map<[string, V]>(([, x]) => [x, this.source[x]])\n        .build();\n    }\n\n    return this.iterator.next();\n  }\n}\n","export abstract class BaseCollection<K, V> {\n  /**\n   * Returns a new `Iterator` object that contains an array of [`key`, `value`] for each element in\n   * the `Collection` object.\n   */\n  public [Symbol.iterator] = this.entries;\n\n  /**\n   * Returns the number of key/value pairs in the `Collection` object.\n   */\n  public abstract get size(): number;\n\n  /**\n   * Removes all key/value pairs from the `Collection` object.\n   */\n  public abstract clear(): void;\n\n  /**\n   * Removes any value associated to the `key` and returns the value that `Collection#has(key)`\n   * would have previously returned. `Collection#has(key)` will return false afterwards.\n   */\n  public abstract delete(key: K): boolean;\n\n  /**\n   * Returns a new `Iterator` object that contains an array of [`key`, `value`] for each element\n   * in the `Collection` object.\n   */\n  public abstract entries(): IterableIterator<[K, V]>;\n\n  /**\n   * Calls `callbackFn` once for each key-value pair present in the `Collection` object.\n   * If a thisArg parameter is provided to forEach, it will be used as the this value for each callback.\n   */\n  public forEach(\n    callbackfn: (value: V, key: K, collection: this) => void,\n    thisArg?: any\n  ): void {\n    for (const [k, v] of this) {\n      callbackfn.call(thisArg, v, k, this);\n    }\n  }\n\n  /**\n   * Returns the value associated to the `key`, or `undefined` if there is none.\n   */\n  public abstract get(key: K): V | undefined;\n\n  /**\n   * Returns a boolean asserting whether a value has been associated to the `key` in the `Collection` object or not.\n   */\n  public abstract has(key: K): boolean;\n\n  /**\n   * Sets the `value` for `the` key in the `Collection` object. Returns the `Collection` object.\n   */\n  public abstract set(key: K, value: V): this;\n}\n","import { IteratorBuilder } from \"../iterators/IteratorBuilder\";\nimport { BaseCollection } from \"./BaseCollection\";\n\nexport abstract class KeyedCollection<K, V> extends BaseCollection<K, V> {\n  /**\n   * Sets each [`key`, `value`] entry from `entries` in the `Collection` object. Returns the `Collection` object.\n   */\n  public setAll(entries: Iterable<[K, V]>): this {\n    for (const [k, v] of entries) {\n      this.set(k, v);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes any values associated to the `keys`.\n   */\n  public deleteAll(keys: Iterable<K>): void {\n    for (const key of keys) {\n      this.delete(key);\n    }\n  }\n\n  /**\n   * Returns a new `Iterator` object that contains the keys for each element in the `Collection` object\n   * in insertion order.\n   */\n  public keys(): IterableIterator<K> {\n    return new IteratorBuilder(this.entries()).map<K>(([x]) => x).build();\n  }\n\n  /**\n   * Returns a new `Iterator` object that contains the `values` for each element in the `Collection` object.\n   */\n  public values(): IterableIterator<V> {\n    return new IteratorBuilder(this.entries()).map<V>(([, x]) => x).build();\n  }\n}\n","import { KeyedCollection } from \"./KeyedCollection\";\n\nexport const REMOVAL_CAUSE_SIZE = \"SIZE\";\nexport const REMOVAL_CAUSE_EXPIRED = \"EXPIRED\";\nexport const REMOVAL_CAUSE_EXPLICIT = \"EXPLICIT\";\nexport const REMOVAL_CAUSE_REPLACED = \"REPLACED\";\n\nexport type CacheRemovalCause = \"EXPLICIT\" | \"REPLACED\" | \"SIZE\" | \"EXPIRED\";\n\nexport interface Cache<K, V> {\n  /**\n   * Returns the value associated to the `key`, or `undefined` if there is none\n   * without updating the \"recently used\"-ness of the key.\n   */\n  peek(key: K): V | undefined;\n}\n\nexport abstract class CacheCollection<K, V> extends KeyedCollection<K, V>\n  implements Cache<K, V> {\n  public abstract peek(key: K): V | undefined;\n\n  /**\n   * Remove expired entries from cache, and returns number of removed elements.\n   */\n  public cleanup(): number {\n    const size = this.size;\n\n    return size - Array.from(this.keys()).length;\n  }\n\n  public abstract get maxSize(): number | undefined;\n  public abstract get expireAfterAccess(): number;\n  public abstract get expireAfterWrite(): number;\n}\n","import { KeyedCollection } from \"./KeyedCollection\";\n\nexport abstract class SortedMap<K, V> extends KeyedCollection<K, V> {\n  /**\n   * Sets the `value` for `the` key in the as first element of `Collection` object. Returns the `Collection` object.\n   */\n  public abstract setFirst(key: K, value: V): this;\n\n  /**\n   * Returns first value in the `Collection` object, or `undefined` if there is none.\n   */\n  public firstEntry(): [K, V] | undefined {\n    for (const entry of this) {\n      return entry;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Returns last value in the `Collection` object, or `undefined` if there is none.\n   */\n  public lastEntry(): [K, V] | undefined {\n    let result;\n\n    for (const entry of this) {\n      result = entry;\n    }\n\n    return result;\n  }\n}\n","import { SortedMap } from \"../abstract/SortedMap\";\nimport { AbstractIterator } from \"../iterators/AbstractIterator\";\n\nclass LinkedMapNode<K, V> {\n  public prev: LinkedMapNode<K, V> | null = null;\n  public next: LinkedMapNode<K, V> | null = null;\n\n  constructor(public key: K, public value: V) {\n    this.key = key;\n    this.value = value;\n  }\n}\n\nclass LinkedMapIterator<K, V> extends AbstractIterator<[K, V]> {\n  constructor(private node: LinkedMapNode<K, V> | null) {\n    super();\n  }\n\n  public next(): IteratorResult<[K, V]> {\n    if (!this.node) {\n      return { done: true } as IteratorResult<[K, V]>;\n    }\n\n    const { key, value } = this.node;\n\n    this.node = this.node.prev;\n\n    return { done: false, value: [key, value] };\n  }\n}\n\nexport class LinkedMap<K, V> extends SortedMap<K, V> {\n  private head: LinkedMapNode<K, V> | null = null;\n  private tail: LinkedMapNode<K, V> | null = null;\n  private map = new Map<K, LinkedMapNode<K, V>>();\n\n  constructor(entries?: Array<[K, V]> | Iterable<[K, V]>) {\n    super();\n\n    if (entries) {\n      this.setAll(entries);\n    }\n  }\n\n  public get size(): number {\n    return this.map.size;\n  }\n\n  public entries(): IterableIterator<[K, V]> {\n    return new LinkedMapIterator<K, V>(this.tail);\n  }\n\n  public clear(): void {\n    this.map.clear();\n    this.head = null;\n    this.tail = null;\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n\n    if (node) {\n      this.unlinkNode(node);\n      this.map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.map.get(key);\n\n    return node ? node.value : undefined;\n  }\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public set(key: K, value: V): this {\n    const node = this.insert(key, value);\n\n    this.setHead(node);\n\n    return this;\n  }\n\n  public setFirst(key: K, value: V): this {\n    const node = this.insert(key, value);\n\n    this.setTail(node);\n\n    return this;\n  }\n\n  public firstEntry(): [K, V] | undefined {\n    const node = this.tail;\n\n    return node ? [node.key, node.value] : undefined;\n  }\n\n  public lastEntry(): [K, V] | undefined {\n    const node = this.head;\n\n    return node ? [node.key, node.value] : undefined;\n  }\n\n  private setHead(node: LinkedMapNode<K, V>) {\n    node.next = this.head;\n    node.prev = null;\n\n    if (this.head) {\n      this.head.prev = node;\n    }\n\n    this.head = node;\n\n    if (!this.tail) {\n      this.tail = node;\n    }\n  }\n\n  private setTail(node: LinkedMapNode<K, V>) {\n    node.next = null;\n    node.prev = this.tail;\n\n    if (this.tail) {\n      this.tail.next = node;\n    }\n\n    this.tail = node;\n\n    if (!this.head) {\n      this.head = node;\n    }\n  }\n\n  private insert(key: K, value: V) {\n    let node: LinkedMapNode<K, V> | undefined = this.map.get(key);\n\n    if (node) {\n      node.value = value;\n\n      this.unlinkNode(node);\n    } else {\n      node = new LinkedMapNode<K, V>(key, value);\n\n      this.map.set(key, node);\n    }\n\n    return node;\n  }\n\n  private unlinkNode({ prev, next }: LinkedMapNode<K, V>) {\n    if (prev) {\n      prev.next = next;\n    } else {\n      this.head = next;\n    }\n\n    if (next) {\n      next.prev = prev;\n    } else {\n      this.tail = prev;\n    }\n  }\n}\n","import {\n  Cache,\n  CacheRemovalCause,\n  REMOVAL_CAUSE_EXPLICIT,\n  REMOVAL_CAUSE_REPLACED,\n  REMOVAL_CAUSE_SIZE\n} from \"../abstract/CacheCollection\";\nimport { SortedMap } from \"../abstract/SortedMap\";\nimport { LinkedMap } from \"../linked-map/LinkedMap\";\n\nconst DEFAULT_MAX_SIZE = 100;\n\nexport interface LRUMapOptions<K, V> {\n  maxSize?: number;\n  onRemove?: (entry: [K, V], cause: CacheRemovalCause) => void;\n}\n\nexport class LRUMap<K, V> extends SortedMap<K, V> implements Cache<K, V> {\n  private map = new LinkedMap<K, V>();\n  private options: LRUMapOptions<K, V>;\n\n  constructor({ maxSize, onRemove }: LRUMapOptions<K, V> = {}) {\n    super();\n\n    this.options = { maxSize, onRemove };\n  }\n\n  public get size(): number {\n    return this.map.size;\n  }\n\n  public get maxSize(): number {\n    return this.options.maxSize || DEFAULT_MAX_SIZE;\n  }\n\n  public clear(): void {\n    const entries = this.entries();\n\n    this.map.clear();\n\n    for (const entry of entries) {\n      this.onRemove(entry, REMOVAL_CAUSE_EXPLICIT);\n    }\n  }\n\n  public delete(key: K): boolean {\n    if (this.map.has(key)) {\n      const value = this.map.get(key)!;\n\n      this.map.delete(key);\n\n      this.onRemove([key, value], REMOVAL_CAUSE_EXPLICIT);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public entries(): IterableIterator<[K, V]> {\n    return this.map.entries();\n  }\n\n  /**\n   * Returns the value associated to the `key`, or `undefined` if there is none\n   * with updating element position in `Collection`\n   */\n  public get(key: K): V | undefined {\n    if (!this.map.has(key)) {\n      return undefined;\n    }\n\n    const value = this.map.get(key);\n\n    this.set(key, value!);\n\n    return value;\n  }\n\n  /**\n   * Returns the value associated to the `key`, or `undefined` if there is none\n   * without updating element position in `Collection`\n   */\n  public peek(key: K): V | undefined {\n    return this.map.get(key);\n  }\n\n  public firstEntry(): [K, V] | undefined {\n    const node = this.map.firstEntry();\n\n    if (node) {\n      this.set(node[0], node[1]);\n    }\n\n    return node;\n  }\n\n  public lastEntry(): [K, V] | undefined {\n    return this.map.lastEntry();\n  }\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  public set(key: K, value: V): this {\n    return this.setValue(key, value, true);\n  }\n\n  public setFirst(key: K, value: V): this {\n    return this.setValue(key, value, false);\n  }\n\n  public values(): IterableIterator<V> {\n    return this.map.values();\n  }\n\n  private setValue(key: K, value: V, last: boolean): this {\n    const map = this.map;\n    let replacedEntry: [K, V] | undefined;\n\n    if (this.has(key)) {\n      const [k] = (last ? map.lastEntry() : map.firstEntry())!;\n\n      if (k !== key) {\n        replacedEntry = [key, map.get(key)!];\n      }\n    } else {\n      const firstEntry = map.firstEntry();\n\n      if (firstEntry && this.size >= this.maxSize) {\n        map.delete(firstEntry[0]);\n\n        this.onRemove(firstEntry, REMOVAL_CAUSE_SIZE);\n      }\n    }\n\n    if (last) {\n      map.set(key, value);\n    } else {\n      map.setFirst(key, value);\n    }\n\n    if (replacedEntry) {\n      this.onRemove(replacedEntry, REMOVAL_CAUSE_REPLACED);\n    }\n\n    return this;\n  }\n\n  private onRemove(entry: [K, V], cause: CacheRemovalCause) {\n    if (this.options.onRemove) {\n      this.options.onRemove(entry, cause);\n    }\n  }\n}\n","import {\n  CacheCollection,\n  CacheRemovalCause,\n  REMOVAL_CAUSE_EXPIRED,\n  REMOVAL_CAUSE_EXPLICIT\n} from \"../abstract/CacheCollection\";\nimport { KeyedCollection } from \"../abstract/KeyedCollection\";\nimport { IteratorBuilder } from \"../iterators/IteratorBuilder\";\nimport { LinkedMap } from \"../linked-map/LinkedMap\";\nimport { LRUMap, LRUMapOptions } from \"../lru-map/LRUMap\";\nimport { SystemTicker, Ticker } from \"../ticker/Ticker\";\n\nexport interface KeyedCacheOptions<K, V> extends LRUMapOptions<K, V> {\n  ticker?: Ticker;\n  expireAfterWrite?: number;\n  expireAfterAccess?: number;\n}\n\nclass KeyedCacheNode<V> {\n  constructor(public value: V, public expiresAt: number) {}\n}\n\nexport class KeyedCache<K, V> extends CacheCollection<K, V> {\n  private map: KeyedCollection<K, KeyedCacheNode<V>>;\n  private options: KeyedCacheOptions<K, V>;\n\n  constructor(options: KeyedCacheOptions<K, V> = {}) {\n    super();\n\n    const {\n      maxSize,\n      onRemove,\n      expireAfterWrite,\n      expireAfterAccess,\n      ticker = new SystemTicker()\n    } = options;\n\n    this.options = {\n      ticker,\n      maxSize,\n      onRemove,\n      expireAfterWrite,\n      expireAfterAccess\n    };\n\n    if (maxSize) {\n      this.map = new LRUMap<K, KeyedCacheNode<V>>({\n        maxSize,\n        onRemove: ([key, node], cause) => {\n          if (cause !== REMOVAL_CAUSE_EXPLICIT) {\n            this.onRemove([key, node.value], cause);\n          }\n        }\n      });\n    } else {\n      this.map = new LinkedMap<K, KeyedCacheNode<V>>();\n    }\n  }\n\n  private get now(): number {\n    return this.options.ticker!.now();\n  }\n\n  public get size(): number {\n    return this.map.size;\n  }\n\n  public get maxSize(): number | undefined {\n    return this.options.maxSize;\n  }\n\n  public get expireAfterAccess(): number {\n    return this.options.expireAfterAccess || 0;\n  }\n\n  public get expireAfterWrite(): number {\n    return this.options.expireAfterWrite || 0;\n  }\n\n  public clear(): void {\n    const entries = this.map.entries();\n\n    this.map.clear();\n\n    for (const [key, node] of entries) {\n      this.onRemove([key, node.value], REMOVAL_CAUSE_EXPLICIT);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n\n    if (node) {\n      this.map.delete(key);\n\n      this.onRemove([key, node.value], REMOVAL_CAUSE_EXPLICIT);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public entries(): IterableIterator<[K, V]> {\n    return new IteratorBuilder(this.map.entries())\n      .filter(([k]) => this.has(k))\n      .map<[K, V]>(([key, node]) => [key, node.value])\n      .build();\n  }\n\n  public has(key: K): boolean {\n    return Boolean(this.peekNode(key));\n  }\n\n  public get(key: K): V | undefined {\n    if (!this.has(key)) {\n      return undefined;\n    }\n\n    const node = this.map.get(key);\n\n    if (this.expireAfterAccess) {\n      node!.expiresAt = Math.max(\n        node!.expiresAt,\n        this.now + this.expireAfterAccess\n      );\n    }\n\n    return node!.value;\n  }\n\n  public peek(key: K): V | undefined {\n    const node = this.peekNode(key);\n\n    return node ? node.value : undefined;\n  }\n\n  public set(key: K, value: V): this {\n    const expiresAfter = Math.max(\n      this.expireAfterWrite,\n      this.expireAfterAccess\n    );\n\n    const node = new KeyedCacheNode(\n      value,\n      expiresAfter === 0 ? Infinity : expiresAfter + this.now\n    );\n\n    this.map.set(key, node);\n\n    return this;\n  }\n\n  private peekNode(key: K): KeyedCacheNode<V> | undefined {\n    const node =\n      this.map instanceof LRUMap ? this.map.peek(key) : this.map.get(key);\n\n    if (node) {\n      if (node.expiresAt > this.now) {\n        return node;\n      }\n\n      this.map.delete(key);\n\n      this.onRemove([key, node.value], REMOVAL_CAUSE_EXPIRED);\n    }\n\n    return undefined;\n  }\n\n  private onRemove(entry: [K, V], cause: CacheRemovalCause): void {\n    if (this.options.onRemove) {\n      this.options.onRemove(entry, cause);\n    }\n  }\n}\n","import { CacheCollection } from \"../abstract/CacheCollection\";\nimport { IteratorBuilder } from \"../iterators/IteratorBuilder\";\nimport { KeyedCache, KeyedCacheOptions } from \"../keyed-cache/KeyedCache\";\n\nexport type HashType = string | number;\n\nexport interface HashCacheOptions<K, V> extends KeyedCacheOptions<K, V> {\n  keyHasher: (key: K) => HashType;\n}\n\nexport class HashCacheNode<K, V> {\n  constructor(public key: K, public value: V) {}\n}\n\nexport class HashCache<K, V> extends CacheCollection<K, V> {\n  private cache: KeyedCache<HashType, HashCacheNode<K, V>>;\n  private keyHasher: (key: K) => HashType;\n\n  constructor(options: HashCacheOptions<K, V>) {\n    super();\n\n    const {\n      ticker,\n      maxSize,\n      onRemove,\n      keyHasher,\n      expireAfterWrite,\n      expireAfterAccess\n    } = options;\n\n    const cacheOptions: KeyedCacheOptions<HashType, HashCacheNode<K, V>> = {\n      ticker,\n      maxSize,\n      expireAfterWrite,\n      expireAfterAccess\n    };\n\n    if (onRemove) {\n      cacheOptions.onRemove = ([, node], cause) =>\n        onRemove([node.key, node.value], cause);\n    }\n\n    this.keyHasher = keyHasher;\n    this.cache = new KeyedCache(cacheOptions);\n  }\n\n  public get size(): number {\n    return this.cache.size;\n  }\n\n  public get maxSize(): number | undefined {\n    return this.cache.maxSize;\n  }\n\n  public get expireAfterAccess(): number {\n    return this.cache.expireAfterAccess;\n  }\n\n  public get expireAfterWrite(): number {\n    return this.cache.expireAfterWrite;\n  }\n\n  public clear(): void {\n    this.cache.clear();\n  }\n\n  public delete(key: K): boolean {\n    return this.cache.delete(this.keyHasher(key));\n  }\n\n  public entries(): IterableIterator<[K, V]> {\n    return new IteratorBuilder(this.cache.entries())\n      .map<[K, V]>(([, x]) => [x.key, x.value])\n      .build();\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.cache.get(this.keyHasher(key));\n\n    return node ? node.value : undefined;\n  }\n\n  public peek(key: K): V | undefined {\n    const node = this.cache.peek(this.keyHasher(key));\n\n    return node ? node.value : undefined;\n  }\n\n  public has(key: K): boolean {\n    return this.cache.has(this.keyHasher(key));\n  }\n\n  public set(key: K, value: V): this {\n    this.cache.set(this.keyHasher(key), new HashCacheNode(key, value));\n\n    return this;\n  }\n}\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}